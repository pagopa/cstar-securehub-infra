name: üîç Static Analysis MA

on:
  push:
    branches:
      - main
      - fix-main-static-analysis

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    env:
      TF_PLUGIN_CACHE_DIR: /tmp/.terraform.d/plugin-cache

    steps:
      - name: ‚ö° Checkout code
        uses: actions/checkout@v4.1.1

      - name: üìñ Read Terraform version
        run: |
          echo "TERRAFORM_VERSION=$(cat .terraform-version)" >> $GITHUB_ENV

      - name: üî® Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.0
        with:
          terraform_version: "${{ env.TERRAFORM_VERSION }}"

      - name: üßπ Clean provider directories
        run: |
          find . -type d -name ".terraform" -exec rm -rf {} +
          find . -type f -name ".terraform.lock.hcl" -exec rm -f {} +
          rm -rf $TF_PLUGIN_CACHE_DIR/*

      - name: üíæ Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: $TF_PLUGIN_CACHE_DIR
          key: ${{ runner.os }}-terraform-${{ env.TERRAFORM_VERSION }}-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-${{ env.TERRAFORM_VERSION }}-
            ${{ runner.os }}-terraform-

      - name: üîß Setup Terraform plugin cache
        run: |
          mkdir -p $TF_PLUGIN_CACHE_DIR
          echo 'plugin_cache_dir = "/tmp/.terraform.d/plugin-cache"' > ~/.terraformrc

      - name: üèÅ Init Terraform folders
        shell: bash
        run: |
          echo "üì¢ Show space"
          df -h

          echo -e "\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-"
          echo    "+ üèÅ INIT TERRAFORM FOLDERS üèÅ   +"
          echo -e "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n"

          # Generate a unique list of folders containing `.tf` files, excluding the 90_aws folder
          FOLDERS=$(find . -type f -name "*.tf" ! -path "*/.terraform/*" ! -path "*/90_aws/*" -exec dirname {} \; | sort -u)
          echo "FOLDERS=${FOLDERS}"

          for f in $FOLDERS; do
            echo -e "\nüìÇ Processing: ${f}"
            (
              cd "${f}" || exit
              # Check for any necessary changes to backend configurations
              if [[ -f "99_main.tf" ]]; then
                sed -i -e 's/  backend "azurerm" {}//g' 99_main.tf || true
              fi
              # Initialize Terraform and lock providers for all platforms
              terraform init -upgrade -lockfile=true &&
              terraform providers lock \
                -platform=darwin_arm64 \
                -platform=darwin_amd64 \
                -platform=linux_amd64 \
                -platform=linux_arm64
            ) || echo "‚ö†Ô∏è Initialization failed for ${f}" # Log failure for specific folders
          done

      - name: Show precommit version
        shell: bash
        run: |
          echo -e "\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"
          echo    "+ 1Ô∏è‚É£  SHOW PRECOMMIT VERSION 1Ô∏è‚É£  +"
          echo -e "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"

          TAG=v1.99.2@sha256:34f6cef8b944d571ea22be316a960d8353fcc0571adea35302cbd9ab80bf2758
          docker run --rm --entrypoint cat ghcr.io/antonbabenko/pre-commit-terraform:$TAG /usr/bin/tools_versions_info

      - name: üö® Run precommit
        shell: bash
        run: |
          echo -e "\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"
          echo    "+- üö® PRECOMMIT TERRAFORM üö® -+"
          echo -e "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"

          TARGET_FILES=$(find . -type f -name "*.tf" ! -path "*/.terraform/*" ! -path "./src/90_aws/*")

          TAG=v1.99.2@sha256:34f6cef8b944d571ea22be316a960d8353fcc0571adea35302cbd9ab80bf2758
          docker run \
            -v "$(pwd)":/lint \
            -v /tmp/.terraform.d/plugin-cache:/tmp/.terraform.d/plugin-cache \
            -w /lint \
            ghcr.io/antonbabenko/pre-commit-terraform:$TAG \
            run --files $TARGET_FILES
